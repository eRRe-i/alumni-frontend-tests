@layout('alumni/layouts/base')

@section('content')
<div class="tab-container" x-data="{ activeTab: 'profile' }">
    <div class="flex items-center relative mt-6 px-4">
        <div class="my-tab p-3 cursor-pointer " :class="{ 'active-tab': activeTab === 'profile' }" @click="activeTab = 'profile'">Profile</div>
        <div class="my-tab p-3 cursor-pointer" :class="{ 'active-tab': activeTab === 'professional' }" @click="activeTab = 'professional'">Professional</div>
        <div class="my-tab p-3 cursor-pointer" :class="{ 'active-tab': activeTab === 'academic' }" @click="activeTab = 'academic'">Academic</div>
        <div class="underline-tab"></div>
    </div>
    <div class="tab-content mt-5 mx-6">
        <div x-show="activeTab === 'profile'" x-cloak>
            <h2>Show this when Profile tab is active</h2>
        </div>
        <div x-show="activeTab === 'professional'" x-cloak>
            <h2>Show this when Professional tab is active</h2>
        </div>
        <div x-show="activeTab === 'academic'" x-cloak>
            <h2>Show this when Academic tab is active</h2>
        </div>
    </div>
</div>

<style>
    .my-tab {
        padding: 10px;
        cursor: pointer;
    }

    .active-tab {
        color: blue;
    }

    .underline-tab {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 2px;
        background-color: blue;
        transition: transform 0.3s;
    }
    [x-cloak] { display: none !important; }
</style>

<script>
    const tabs = document.querySelectorAll('.my-tab');
const underline = document.querySelector('.underline-tab');

tabs.forEach(tab => {
  tab.addEventListener('click', () => {
    // Remove the active class from all tabs
    tabs.forEach(tab => tab.classList.remove('active-tab'));

    // Add the active class to the clicked tab
    tab.classList.add('active-tab');

    // Move the underline to the clicked tab
    const tabWidth = tab.offsetWidth;
    const tabLeft = tab.offsetLeft;
    underline.style.transform = `translateX(${tabLeft}px)`;
    underline.style.width = `${tabWidth}px`;
  });
});

const tabWidth = tabs[0].offsetWidth;
const tabLeft = tabs[0].offsetLeft;
underline.style.transform = `translateX(${tabLeft}px)`;
underline.style.width = `${tabWidth}px`;
</script>


@end